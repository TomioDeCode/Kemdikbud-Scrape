import sqlite3


class DatabaseManager:
    def __init__(self, database_path):
        self.conn = sqlite3.connect(database_path)
        self.cursor = self.conn.cursor()
        self.setup_database()

    def setup_database(self):
        tables = [
            (
                "nasional",
                [
                    "id INTEGER PRIMARY KEY",
                    "nama TEXT",
                    "url TEXT",
                    "Wilayah TEXT",
                    "Total_Jml TEXT",
                    "Total_N TEXT",
                    "Total_S TEXT",
                    "TK_Jml TEXT",
                    "TK_N TEXT",
                    "TK_S TEXT",
                    "KB_Jml TEXT",
                    "KB_N TEXT",
                    "KB_S TEXT",
                    "TPA_Jml TEXT",
                    "TPA_N TEXT",
                    "TPA_S TEXT",
                    "SPS_Jml TEXT",
                    "SPS_N TEXT",
                    "SPS_S TEXT",
                    "PKBM_Jml TEXT",
                    "PKBM_N TEXT",
                    "PKBM_S TEXT",
                    "SKB_Jml TEXT",
                    "SKB_N TEXT",
                    "SKB_S TEXT",
                    "SD_Jml TEXT",
                    "SD_N TEXT",
                    "SD_S TEXT",
                    "SMP_Jml TEXT",
                    "SMP_N TEXT",
                    "SMP_S TEXT",
                    "SMA_Jml TEXT",
                    "SMA_N TEXT",
                    "SMA_S TEXT",
                    "SMK_Jml TEXT",
                    "SMK_N TEXT",
                    "SMK_S TEXT",
                    "SLB_Jml TEXT",
                    "SLB_N TEXT",
                    "SLB_S TEXT",
                    "progress INTEGER DEFAULT 0",
                ],
            ),
            (
                "provinsi",
                [
                    "id INTEGER PRIMARY KEY",
                    "nama TEXT",
                    "url TEXT",
                    "Wilayah TEXT",
                    "Total_Jml TEXT",
                    "Total_N TEXT",
                    "Total_S TEXT",
                    "TK_Jml TEXT",
                    "TK_N TEXT",
                    "TK_S TEXT",
                    "KB_Jml TEXT",
                    "KB_N TEXT",
                    "KB_S TEXT",
                    "TPA_Jml TEXT",
                    "TPA_N TEXT",
                    "TPA_S TEXT",
                    "SPS_Jml TEXT",
                    "SPS_N TEXT",
                    "SPS_S TEXT",
                    "PKBM_Jml TEXT",
                    "PKBM_N TEXT",
                    "PKBM_S TEXT",
                    "SKB_Jml TEXT",
                    "SKB_N TEXT",
                    "SKB_S TEXT",
                    "SD_Jml TEXT",
                    "SD_N TEXT",
                    "SD_S TEXT",
                    "SMP_Jml TEXT",
                    "SMP_N TEXT",
                    "SMP_S TEXT",
                    "SMA_Jml TEXT",
                    "SMA_N TEXT",
                    "SMA_S TEXT",
                    "SMK_Jml TEXT",
                    "SMK_N TEXT",
                    "SMK_S TEXT",
                    "SLB_Jml TEXT",
                    "SLB_N TEXT",
                    "SLB_S TEXT",
                    "nasional_id INTEGER",
                    "progress INTEGER DEFAULT 0",
                    "FOREIGN KEY(nasional_id) REFERENCES nasional(id)",
                ],
            ),
            (
                "kabupaten",
                [
                    "id INTEGER PRIMARY KEY",
                    "nama TEXT",
                    "url TEXT",
                    "Wilayah TEXT",
                    "Total_Jml TEXT",
                    "Total_N TEXT",
                    "Total_S TEXT",
                    "TK_Jml TEXT",
                    "TK_N TEXT",
                    "TK_S TEXT",
                    "KB_Jml TEXT",
                    "KB_N TEXT",
                    "KB_S TEXT",
                    "TPA_Jml TEXT",
                    "TPA_N TEXT",
                    "TPA_S TEXT",
                    "SPS_Jml TEXT",
                    "SPS_N TEXT",
                    "SPS_S TEXT",
                    "PKBM_Jml TEXT",
                    "PKBM_N TEXT",
                    "PKBM_S TEXT",
                    "SKB_Jml TEXT",
                    "SKB_N TEXT",
                    "SKB_S TEXT",
                    "SD_Jml TEXT",
                    "SD_N TEXT",
                    "SD_S TEXT",
                    "SMP_Jml TEXT",
                    "SMP_N TEXT",
                    "SMP_S TEXT",
                    "SMA_Jml TEXT",
                    "SMA_N TEXT",
                    "SMA_S TEXT",
                    "SMK_Jml TEXT",
                    "SMK_N TEXT",
                    "SMK_S TEXT",
                    "SLB_Jml TEXT",
                    "SLB_N TEXT",
                    "SLB_S TEXT",
                    "provinsi_id INTEGER",
                    "progress INTEGER DEFAULT 0",
                    "FOREIGN KEY(provinsi_id) REFERENCES provinsi(id)",
                ],
            ),
            (
                "kecamatan",
                [
                    "id INTEGER PRIMARY KEY",
                    "nama TEXT",
                    "url TEXT",
                    "Wilayah TEXT",
                    "Total_Jml TEXT",
                    "Total_N TEXT",
                    "Total_S TEXT",
                    "TK_Jml TEXT",
                    "TK_N TEXT",
                    "TK_S TEXT",
                    "KB_Jml TEXT",
                    "KB_N TEXT",
                    "KB_S TEXT",
                    "TPA_Jml TEXT",
                    "TPA_N TEXT",
                    "TPA_S TEXT",
                    "SPS_Jml TEXT",
                    "SPS_N TEXT",
                    "SPS_S TEXT",
                    "PKBM_Jml TEXT",
                    "PKBM_N TEXT",
                    "PKBM_S TEXT",
                    "SKB_Jml TEXT",
                    "SKB_N TEXT",
                    "SKB_S TEXT",
                    "SD_Jml TEXT",
                    "SD_N TEXT",
                    "SD_S TEXT",
                    "SMP_Jml TEXT",
                    "SMP_N TEXT",
                    "SMP_S TEXT",
                    "SMA_Jml TEXT",
                    "SMA_N TEXT",
                    "SMA_S TEXT",
                    "SMK_Jml TEXT",
                    "SMK_N TEXT",
                    "SMK_S TEXT",
                    "SLB_Jml TEXT",
                    "SLB_N TEXT",
                    "SLB_S TEXT",
                    "kabupaten_id INTEGER",
                    "progress INTEGER DEFAULT 0",
                    "FOREIGN KEY(kabupaten_id) REFERENCES kabupaten(id)",
                ],
            ),
            (
                "sekolah",
                [
                    "id INTEGER PRIMARY KEY",
                    "nama TEXT",
                    "url TEXT",
                    "NamaSekolah TEXT",
                    "NPSN TEXT",
                    "BP TEXT",
                    "Status TEXT",
                    "Last_Sync TEXT",
                    "Jml_Sync TEXT",
                    "PD TEXT",
                    "Rombel TEXT",
                    "Guru TEXT",
                    "Pegawai TEXT",
                    "Kelas TEXT",
                    "Lab TEXT",
                    "Perpus TEXT",
                    "kecamatan_id INTEGER",
                    "progress INTEGER DEFAULT 0",
                    "FOREIGN KEY(kecamatan_id) REFERENCES kecamatan(id)",
                ],
            ),
        ]

        for table_name, columns in tables:
            create_query = f"""
            CREATE TABLE IF NOT EXISTS {table_name} (
                {', '.join(columns)}
            )
            """
            self.cursor.execute(create_query)
        self.conn.commit()

    def close(self):
        self.conn.close()
